(defun + (&rest args)
    (if (haxe== (length args) 1)
        (first args)
        (if (haxe== (length args) 0)
            0
            (if (haxe== (length args) 2)
                (haxe+ (first args) (first (rest args)))
                (+ (+ (first args) (first (rest args))) (funcall + (rest (rest args))))))))

(defmacro bind (pair)
    `(setlocal ,(first pair) ,(first (rest pair))))

(defmacro let (bindings &rest body)
    `(progn 
        (scope-in)
        (dolist ',bindings bind)
        (dolist ',body eval)
        (scope-out)))

(defun range (arg1 &optional arg2)
    (if arg2
        (haxe... arg1 arg2)
        (haxe... 0 arg1)))