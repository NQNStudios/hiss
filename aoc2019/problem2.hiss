(defun part1 ()
    (execute 12 2))
---
(defun try-with-noun (noun)
    (setq noun noun)
    (for (range 100) try-with-verb))
---
(defun try-with-verb (verb)
    (if (haxe== 19690720 (execute noun verb))
        (progn (print noun) (print ", ") (print verb) (quit))))
---
(defun part2 ()
    (for (range 100) try-with-noun))
---
(defun execute (noun verb)
    (setq program (map (split (getContent "aoc2019/input2.txt") ",") parseInt))
    (setq counter 0)
    (set-nth program 1 noun)
    (set-nth program 2 verb)
    (print (run)))
---
(defun run ()
    (setlocal instruction (nth program counter))
    (if (haxe== instruction 99)
        (nth program 0)
        (progn 
            (setlocal 
                a-idx (nth program (haxe+ counter 1))
                b-idx (nth program (haxe+ counter 2))
                c-idx (nth program (haxe+ counter 3))
                a-val (nth program a-idx)
                b-val (nth program b-idx))
            (if (haxe== instruction 1)
                (setlocal value (haxe+ a-val b-val))
                (if (haxe== instruction 2)
                    (setlocal value (haxe* a-val b-val))
                    "error"))
            (set-nth program c-idx value)
            (setq counter (+ counter 4))
            (run))))
